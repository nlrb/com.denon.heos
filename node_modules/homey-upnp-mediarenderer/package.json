{
  "_args": [
    [
      {
        "raw": "https://github.com/athombv/node-homey-upnp-mediarenderer.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/athombv/node-homey-upnp-mediarenderer.git",
        "spec": "git+https://github.com/athombv/node-homey-upnp-mediarenderer.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:athombv/node-homey-upnp-mediarenderer.git",
          "sshUrl": "git+ssh://git@github.com/athombv/node-homey-upnp-mediarenderer.git",
          "httpsUrl": "git+https://github.com/athombv/node-homey-upnp-mediarenderer.git",
          "gitUrl": "git://github.com/athombv/node-homey-upnp-mediarenderer.git",
          "shortcut": "github:athombv/node-homey-upnp-mediarenderer",
          "directUrl": "https://raw.githubusercontent.com/athombv/node-homey-upnp-mediarenderer/master/package.json"
        }
      },
      "/Users/baskiers/athom/com.denon.heos"
    ]
  ],
  "_from": "git+https://github.com/athombv/node-homey-upnp-mediarenderer.git",
  "_id": "homey-upnp-mediarenderer@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/homey-upnp-mediarenderer",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/athombv/node-homey-upnp-mediarenderer.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/athombv/node-homey-upnp-mediarenderer.git",
    "spec": "git+https://github.com/athombv/node-homey-upnp-mediarenderer.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:athombv/node-homey-upnp-mediarenderer.git",
      "sshUrl": "git+ssh://git@github.com/athombv/node-homey-upnp-mediarenderer.git",
      "httpsUrl": "git+https://github.com/athombv/node-homey-upnp-mediarenderer.git",
      "gitUrl": "git://github.com/athombv/node-homey-upnp-mediarenderer.git",
      "shortcut": "github:athombv/node-homey-upnp-mediarenderer",
      "directUrl": "https://raw.githubusercontent.com/athombv/node-homey-upnp-mediarenderer/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git+https://github.com/athombv/node-homey-upnp-mediarenderer.git#9e6d805e38f5f03095f3625d4d482477621c9e0e",
  "_shasum": "0c35377322498767e8e58b048198c4bff3547e4a",
  "_shrinkwrap": null,
  "_spec": "https://github.com/athombv/node-homey-upnp-mediarenderer.git",
  "_where": "/Users/baskiers/athom/com.denon.heos",
  "author": {
    "name": "Athom B.V."
  },
  "dependencies": {
    "node-ssdp": "^3.2.0",
    "upnp-mediarenderer-client": "git://github.com/athombv/node-upnp-mediarenderer-client.git#production"
  },
  "description": "Generic upnp mediarenderer driver for Homey apps",
  "devDependencies": {},
  "gitHead": "9e6d805e38f5f03095f3625d4d482477621c9e0e",
  "license": "ISC",
  "main": "index.js",
  "name": "homey-upnp-mediarenderer",
  "optionalDependencies": {},
  "readme": "# Homey Generic UPnP Mediarenderer Driver\n\nGeneric driver to use UPnP Mediarenderer devices with Homey. Automatically registers speaker instance.\n\n### installation\n`npm install homey-upnp-mediarenderer`\n\nexample usage: \n```\n'use strict';\n\nconst UpnpMediaRenderer = require('homey-upnp-mediarenderer');\n\nclass MyMediaRendererDriver extends UpnpMediaRenderer {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.codecs = ['homey:codec:mp3'];\n\t}\n\n\tinit(devices, callback) {\n\t\tthis.scan();\n\n\t\tdevices.forEach(this._initDevice.bind(this));\n\n\t\tcallback();\n\t}\n\n\t_initDevice(deviceData) {\n\t\tconst device = super._initDevice(deviceData);\n\t\tif (device) {\n\t\t\t// Device inited\n\t\t}\n\t}\n\n\tget capabilities() {\n\t\t// Get speaker capabilities from upnpMediaRenderer\n\t\tconst capabilities = super.capabilities;\n\t\t// Capabilities can be added or overwritten here\n\t\treturn capabilities;\n\t}\n\n\tpair(socket) {\n\t\tconst scanLockInterval = setInterval(this.scan.bind(this, 10000), 9000);\n\t\tconst parseDeviceData = (deviceInfo) => ({\n\t\t\tname: deviceInfo.description.friendlyName,\n\t\t\tdata: {\n\t\t\t\tid: deviceInfo.headers.USN,\n\t\t\t},\n\t\t});\n\t\tconst listDeviceListener = (deviceInfo) => socket.emit('list_devices', [parseDeviceData(deviceInfo)]);\n\n\t\tsocket.on('list_devices', (data, callback) => {\n\t\t\tcallback(null, this.getFoundDevices().map(parseDeviceData));\n\t\t\tthis.on('found', listDeviceListener);\n\t\t});\n\n\t\tsocket.on('disconnect', () => {\n\t\t\tthis.removeListener('found', listDeviceListener);\n\t\t\tclearInterval(scanLockInterval);\n\t\t});\n\t}\n}\n\nmodule.exports = new MyMediaRendererDriver();\n```\n\nHomey UPnP Mediarenderer handles the capabilities and Speaker instance with Homey. To add custom logic you will need to override the function. \nDon't forget to call the super method so the logic of the generic driver will not break. For an example on how to do so, see `_initDevice` above.",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.0"
}
